{"version":3,"sources":["assets/finals.png","pages/Home.js","pages/About.js","pages/NoMatch.js","components/NavigationBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Styles","styled","div","Home","props","handleChange","event","inputFormatted","target","value","replace","toUpperCase","complement","getComplement","mRNA","getmRNAfromDNA","proteinDetails","getProteinDetails","protein","proteinWeight","setState","input","handleReverse","reversedInput","state","split","reverse","join","reversedComplement","reversedmRNA","reversedProteinDetails","reversedProtein","reversedProteinWeight","aminoAcidTable","UUU","CUU","AUU","GUU","UUC","CUC","AUC","GUC","UUA","CUA","AUA","GUA","UUG","CUG","AUG","GUG","UCU","CCU","ACU","GCU","UCC","CCC","ACC","GCC","UCA","CCA","ACA","GCA","UCG","CCG","ACG","GCG","UAU","CAU","AAU","GAU","UAC","CAC","AAC","GAC","CAA","GGG","AAA","GAA","AGG","CAG","AAG","GAG","UGU","CGU","AGU","GGU","UGC","CGC","AGC","GGC","CGG","CGA","AGA","GGA","UGG","UAA","UGA","UAG","reverseComplement","dna","upperCaseDNA","result","i","length","string","upperCaseString","readingFrameLen","weight","codon","substring","this","className","Container","style","fontFamily","Form","inline","Group","Control","onChange","Button","onClick","variant","text","toFixed","Component","About","href","src","finals","width","height","alt","NoMatch","NavigationBar","Navbar","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","NavItem","icon","faGithub","color","App","document","title","Fragment","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,oC,w5BCQ3C,IAAMC,EAASC,IAAOC,IAAV,KA0QGC,E,kDAtOb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA6BRC,aAAe,SAACC,GACd,IAAIC,EAAiBD,EAAME,OAAOC,MAAMC,QAAQ,eAAgB,IAAIC,cAChEC,EAAa,EAAKC,cAAcN,GAChCO,EAAO,EAAKC,eAAeR,GAC3BS,EAAiB,EAAKC,kBAAkBH,GACxCI,EAAUF,EAAe,GACzBG,EAAgBH,EAAe,GAEnC,EAAKI,SAAS,CACZC,MAAOd,EACPK,WAAYA,EACZE,KAAMA,EACNI,QAASA,EACTC,cAAeA,KA3CA,EA+CnBG,cAAgB,WACd,IAAIC,EAAgB,EAAKC,MAAMH,MAAMI,MAAM,IAAIC,UAAUC,KAAK,IAC1DC,EAAqB,EAAKJ,MAAMZ,WAAWa,MAAM,IAAIC,UAAUC,KAAK,IACpEE,EAAe,EAAKL,MAAMV,KAAKW,MAAM,IAAIC,UAAUC,KAAK,IACxDG,EAAyB,EAAKb,kBAAkBY,GAChDE,EAAkBD,EAAuB,GACzCE,EAAwBF,EAAuB,GACnD,EAAKV,SAAS,CACZC,MAAOE,EACPT,KAAMe,EACNjB,WAAYgB,EACZV,QAASa,EACTZ,cAAea,KAzDjB,EAAKR,MAAQ,CACXS,eAAgB,CACdC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,UAC5GC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,UAC5GC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,UAC5GC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,UAC5GC,IAAK,CAAC,IAAK,MAAO,UAAYC,IAAK,CAAC,IAAK,MAAO,UAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,UAC5GC,IAAK,CAAC,IAAK,MAAO,UAAYC,IAAK,CAAC,IAAK,MAAO,UAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,UAC5GC,IAAK,CAAC,IAAK,MAAO,UAAYC,IAAK,CAAC,IAAK,MAAO,UAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,UAC5GC,IAAK,CAAC,IAAK,MAAO,UAAYC,IAAK,CAAC,IAAK,MAAO,UAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,UAC5GC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAC5GC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAC5GC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,UAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAC5GC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAC5GC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,UAAYC,IAAK,CAAC,IAAK,MAAO,UAC5GC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,UAAYC,IAAK,CAAC,IAAK,MAAO,UAC5GC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,IAAK,MAAO,UAC5GC,IAAK,CAAC,IAAK,MAAO,WAAYC,IAAK,CAAC,OAAQ,OAAQ,GAAIC,IAAK,CAAC,OAAQ,OAAQ,GAAIC,IAAK,CAAC,OAAQ,OAAQ,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","file":"static/js/main.c522f930.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/finals.c099e776.png\";","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\n// import bgImage from \"../assets/dna.jpg\";\r\n\r\nconst Styles = styled.div`\r\n  .input {\r\n    background-image: linear-gradient(to right, #073C16, #0A5C22);\r\n    color: #ffffff;\r\n    padding-top: 100px;\r\n    padding-bottom: 100px;\r\n  }\r\n\r\n  .form-group {\r\n    flex-grow:1\r\n  }\r\n\r\n  .form-control {\r\n    margin-right: 10px;\r\n    border-radius: 10px;\r\n    flex-grow:1\r\n  }\r\n\r\n  .customButton {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    background: #eb6434;\r\n    font-family: Open Sans;\r\n    color: #FFFFFF;\r\n    border: 1px solid #eb6434;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  .result {\r\n    padding-top: 50px;\r\n    padding-bottom: 20px;\r\n    background-color: #EEEEEE\r\n  }\r\n`;\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      aminoAcidTable: {\r\n        UUU: [\"F\", \"Phe\", 147.06841], CUU: [\"L\", \"Leu\", 113.08406], AUU: [\"I\", \"Ile\", 113.08406], GUU: [\"V\", \"Val\", 99.068410],\r\n        UUC: [\"F\", \"Phe\", 147.06841], CUC: [\"L\", \"Leu\", 113.08406], AUC: [\"I\", \"Ile\", 113.08406], GUC: [\"V\", \"Val\", 99.068410],\r\n        UUA: [\"L\", \"Leu\", 113.08406], CUA: [\"L\", \"Leu\", 113.08406], AUA: [\"I\", \"Ile\", 113.08406], GUA: [\"V\", \"Val\", 99.068410],\r\n        UUG: [\"L\", \"Leu\", 113.08406], CUG: [\"L\", \"Leu\", 113.08406], AUG: [\"M\", \"Met\", 131.04049], GUG: [\"V\", \"Val\", 99.068410],\r\n        UCU: [\"S\", \"Ser\", 87.032030], CCU: [\"P\", \"Pro\", 97.052760], ACU: [\"T\", \"Thr\", 101.04768], GCU: [\"A\", \"Ala\", 71.037110],\r\n        UCC: [\"S\", \"Ser\", 87.032030], CCC: [\"P\", \"Pro\", 97.052760], ACC: [\"T\", \"Thr\", 101.04768], GCC: [\"A\", \"Ala\", 71.037110],\r\n        UCA: [\"S\", \"Ser\", 87.032030], CCA: [\"P\", \"Pro\", 97.052760], ACA: [\"T\", \"Thr\", 101.04768], GCA: [\"A\", \"Ala\", 71.037110],\r\n        UCG: [\"S\", \"Ser\", 87.032030], CCG: [\"P\", \"Pro\", 97.052760], ACG: [\"T\", \"Thr\", 101.04768], GCG: [\"A\", \"Ala\", 71.037110],\r\n        UAU: [\"Y\", \"Tyr\", 163.06333], CAU: [\"H\", \"His\", 137.05891], AAU: [\"N\", \"Asn\", 114.04293], GAU: [\"D\", \"Asp\", 115.02694],\r\n        UAC: [\"Y\", \"Tyr\", 163.06333], CAC: [\"H\", \"His\", 137.05891], AAC: [\"N\", \"Asn\", 114.04293], GAC: [\"D\", \"Asp\", 115.02694],\r\n        CAA: [\"Q\", \"Gln\", 128.05858], GGG: [\"G\", \"Gly\", 57.021460], AAA: [\"K\", \"Lys\", 128.09496], GAA: [\"E\", \"Glu\", 129.04259],\r\n        AGG: [\"R\", \"Arg\", 156.10111], CAG: [\"Q\", \"Gln\", 128.05858], AAG: [\"K\", \"Lys\", 128.09496], GAG: [\"E\", \"Glu\", 129.04259],\r\n        UGU: [\"C\", \"Cys\", 103.00919], CGU: [\"R\", \"Arg\", 156.10111], AGU: [\"S\", \"Ser\", 87.032030], GGU: [\"G\", \"Gly\", 57.021460],\r\n        UGC: [\"C\", \"Cys\", 103.00919], CGC: [\"R\", \"Arg\", 156.10111], AGC: [\"S\", \"Ser\", 87.032030], GGC: [\"G\", \"Gly\", 57.021460],\r\n        CGG: [\"R\", \"Arg\", 156.10111], CGA: [\"R\", \"Arg\", 156.10111], AGA: [\"R\", \"Arg\", 156.10111], GGA: [\"G\", \"Gly\", 57.021460],\r\n        UGG: [\"W\", \"Trp\", 186.07931], UAA: [\"STOP\", \"STOP\", 0], UGA: [\"STOP\", \"STOP\", 0], UAG: [\"STOP\", \"STOP\", 0],\r\n      },\r\n      input: \"\",\r\n      complement: \"\",\r\n      reverseComplement: \"\",\r\n      mRNA: \"\",\r\n      protein: \"\",\r\n      proteinWeight: 0,\r\n    };\r\n  }\r\n  \r\n  handleChange = (event) => {\r\n    let inputFormatted = event.target.value.replace(/[^AaTtCcGg]/g, \"\").toUpperCase();\r\n    let complement = this.getComplement(inputFormatted);\r\n    let mRNA = this.getmRNAfromDNA(inputFormatted);\r\n    let proteinDetails = this.getProteinDetails(mRNA);\r\n    let protein = proteinDetails[0];\r\n    let proteinWeight = proteinDetails[1];\r\n\r\n    this.setState({\r\n      input: inputFormatted,\r\n      complement: complement,\r\n      mRNA: mRNA,\r\n      protein: protein,\r\n      proteinWeight: proteinWeight,\r\n    });\r\n  };\r\n\r\n  handleReverse = () => {\r\n    let reversedInput = this.state.input.split(\"\").reverse().join(\"\");\r\n    let reversedComplement = this.state.complement.split(\"\").reverse().join(\"\");\r\n    let reversedmRNA = this.state.mRNA.split(\"\").reverse().join(\"\");\r\n    let reversedProteinDetails = this.getProteinDetails(reversedmRNA);\r\n    let reversedProtein = reversedProteinDetails[0];\r\n    let reversedProteinWeight = reversedProteinDetails[1];\r\n    this.setState({\r\n      input: reversedInput,\r\n      mRNA: reversedmRNA,\r\n      complement: reversedComplement,\r\n      protein: reversedProtein,\r\n      proteinWeight: reversedProteinWeight,\r\n    })\r\n  }\r\n\r\n  getmRNAfromDNA(dna) {\r\n    let upperCaseDNA = dna.toUpperCase();\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < upperCaseDNA.length; i++) {\r\n      if (upperCaseDNA[i] === \"A\") {\r\n        result += \"U\";\r\n      } else if (upperCaseDNA[i] === \"T\") {\r\n        result += \"A\";\r\n      } else if (upperCaseDNA[i] === \"C\") {\r\n        result += \"G\";\r\n      } else if (upperCaseDNA[i] === \"G\") {\r\n        result += \"C\";\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getComplement(string) {\r\n    let upperCaseString = string.toUpperCase();\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < upperCaseString.length; i++) {\r\n      if (upperCaseString[i] === \"A\") {\r\n        result += \"T\";\r\n      } else if (upperCaseString[i] === \"T\") {\r\n        result += \"A\";\r\n      } else if (upperCaseString[i] === \"C\") {\r\n        result += \"G\";\r\n      } else if (upperCaseString[i] === \"G\") {\r\n        result += \"C\";\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getProteinDetails(mRNA) {\r\n    let readingFrameLen = mRNA.length - mRNA.length % 3;\r\n    let protein = \"\";\r\n    let weight = 0;\r\n\r\n    for (let i = 0; i < readingFrameLen; i += 3) {\r\n      let codon = mRNA.substring(i, i + 3);\r\n      let aminoAcid = this.state.aminoAcidTable[codon][1];\r\n      let aminoAcidWeight = this.state.aminoAcidTable[codon][2];\r\n      protein += aminoAcid + \"-\";\r\n      weight += aminoAcidWeight;\r\n    }\r\n\r\n    // If the mRNA is not multiple of 3, this appends the remaining nucleotides\r\n    protein += mRNA.substring(readingFrameLen, mRNA.length);\r\n\r\n    // Removing the last - \r\n    protein = protein[protein.length - 1] === \"-\"\r\n      ? protein.substring(0, protein.length - 1)\r\n      : protein\r\n\r\n    return [protein, weight];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Styles>\r\n        <div className=\"input\">\r\n          <Container>\r\n            <h1 style={{fontFamily: \"Montserrat\"}}>Enter your DNA strand</h1>\r\n            <Form inline>\r\n              <Form.Group>\r\n                <Form.Control \r\n                  style={{fontFamily: \"Source Code Pro\"}} \r\n                  value={this.state.input} \r\n                  onChange={this.handleChange}\r\n                />\r\n                  <Button \r\n                    className=\"customButton\" \r\n                    onClick={this.handleReverse}\r\n                    variant=\"light\"\r\n                  >\r\n                    Reverse\r\n                  </Button>\r\n              </Form.Group>\r\n            </Form>\r\n          </Container>\r\n        </div>\r\n\r\n        <div className=\"result\">\r\n          <Container>\r\n            <h3>\r\n              Complement\r\n            </h3>\r\n            <Form inline>\r\n              <Form.Group>\r\n                <Form.Control \r\n                  style={{fontFamily: \"Source Code Pro\"}} \r\n                  value={this.state.complement} \r\n                />\r\n                <CopyToClipboard text={this.state.complement}>\r\n                  <Button className=\"customButton\" variant=\"light\">Copy</Button>\r\n                </CopyToClipboard>\r\n              </Form.Group>\r\n            </Form>\r\n\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <h3>\r\n              mRNA\r\n            </h3>\r\n            <Form inline>\r\n              <Form.Group>\r\n                <Form.Control \r\n                  style={{fontFamily: \"Source Code Pro\"}} \r\n                  value={this.state.mRNA} \r\n                />\r\n                <CopyToClipboard text={this.state.mRNA}>\r\n                  <Button className=\"customButton\" variant=\"light\">Copy</Button>\r\n                </CopyToClipboard>\r\n              </Form.Group>\r\n            </Form>\r\n            \r\n            <br></br>\r\n            <br></br>\r\n\r\n            <h3>\r\n              Protein\r\n            </h3>\r\n            <Form inline>\r\n              <Form.Group>\r\n                <Form.Control \r\n                  style={{fontFamily: \"Source Code Pro\"}} \r\n                  value={this.state.protein} \r\n                />\r\n                <CopyToClipboard text={this.state.protein}>\r\n                  <Button className=\"customButton\" variant=\"light\">Copy</Button>\r\n                </CopyToClipboard>\r\n              </Form.Group>\r\n            </Form>\r\n\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <h3>\r\n              Protein Weight\r\n            </h3>\r\n            <Form inline>\r\n              <Form.Group>\r\n                <Form.Control \r\n                  style={{fontFamily: \"Source Code Pro\"}} \r\n                  value={this.state.proteinWeight} \r\n                />\r\n                <CopyToClipboard text={this.state.proteinWeight.toFixed(5)}>\r\n                  <Button className=\"customButton\" variant=\"light\">Copy</Button>\r\n                </CopyToClipboard>\r\n              </Form.Group>\r\n            </Form>\r\n\r\n            <br></br>\r\n            <br></br>\r\n          </Container>\r\n        </div>\r\n      </Styles>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport styled from \"styled-components\";\r\nimport finals from \"../assets/finals.png\";\r\n\r\nconst Styles = styled.div`\r\n  .about {\r\n    margin: 50px;\r\n  }\r\n  \r\n  .body p {\r\n    font-size: 16px;\r\n    font-family: Roboto;\r\n    text-align: justify;\r\n  }\r\n\r\n  .header {\r\n    font-family: Montserrat;\r\n  }\r\n`;\r\n\r\nexport const About = () => (\r\n  <Styles>\r\n    <div className=\"about\">\r\n      <Container className=\"body\">\r\n        <h2 className=\"header\"> Origins</h2>\r\n        <p>\r\n          In the second semester of my freshman year at NUS, I took <a href=\"https://nusmods.com/modules/LSM1102/molecular-genetics\">LSM1102 Molecular Genetics</a>\r\n          . Unfortunately, this was also during the time COVID-19 struck which resulted in all of our exams\r\n          being held online. LSM1102's finals in particular became an open-book and open-internet\r\n          exam instead of the originally planned MCQ exam :-(\r\n        </p>\r\n\r\n        <p>\r\n          The day before our finals, one of the professors uploaded a revision video covering some \r\n          \"important\" concepts, which I took as a hint as to what was going to be on tested on the finals.\r\n          One of the concept he covered was about <a href=\"https://en.wikipedia.org/wiki/Open_reading_frame\">open reading frames</a> which \r\n          would be tedious to do manually (like in an exam) but a lot easier for a computer to handle.\r\n        </p>\r\n\r\n        <p>\r\n          Thus as a <a href=\"https://www.comp.nus.edu.sg/\">computing student</a>, I decided to spend a couple hours that night creating a \r\n          command-line program to automate the process of trying the different possible reading frames.\r\n          Thankfully it worked out because the next day, this question came out ;-)\r\n        </p>\r\n        \r\n        <br/>\r\n        <center>\r\n          <img src={finals} width=\"60%\" height=\"60%\" alt=\"\"/>\r\n        </center>\r\n        <br/>\r\n        \r\n        <p>\r\n          Afterwards I decided to trasnform my command-line program into a website since \r\n          transcribing/translating DNA is pretty handy, and it would also a good opportunity to learn React.\r\n        </p>\r\n      </Container>\r\n    </div>\r\n  </Styles>\r\n)\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Styles = styled.div`\r\n  .header {\r\n    font-family: Montserrat;\r\n    margin: 50px;\r\n  }\r\n`;\r\n\r\nexport const NoMatch = () => (\r\n  <Styles>\r\n    <div>\r\n      <Container>\r\n        <h2 className=\"header\"> Oops! You entered an invalid url :-( </h2>\r\n      </Container>\r\n    </div>\r\n  </Styles>\r\n)\r\n\r\nexport default NoMatch;","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport styled from \"styled-components\";\r\nimport NavItem from \"react-bootstrap/NavItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Styles = styled.div`\r\n  .navbar {\r\n    background-image: linear-gradient(to right, #073C16, #0A5C22);\r\n    padding-left: 50px;\r\n    padding-right: 50px;\r\n  }\r\n\r\n  .navbar-brand, .navbar-nav .nav-link {\r\n    color: #ffffff;\r\n    font-size: 20px;\r\n    padding-left: 10px;\r\n    font-family: Montserrat;\r\n  }\r\n\r\n  .fa-github{\r\n    &:hover{\r\n      color:black !important;\r\n    }\r\n }\r\n`;\r\n\r\nexport const NavigationBar = () => (\r\n  <Styles>\r\n    <Navbar expand=\"lg\">\r\n      <Navbar.Brand as={Link} to=\"/dna-converter\"></Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <NavItem>\r\n            <Nav.Link as={Link} to=\"/dna-converter\">Home</Nav.Link>\r\n          </NavItem>\r\n\r\n          <NavItem>\r\n            <Nav.Link as={Link} to=\"/dna-converter/about\">About</Nav.Link>\r\n          </NavItem>\r\n\r\n          <NavItem>\r\n            <Nav.Link href=\"https://github.com/aizatazhar/dna-converter\">\r\n              <FontAwesomeIcon icon={faGithub} style={{ color: 'white' }}/>\r\n            </Nav.Link>\r\n          </NavItem>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  </Styles>\r\n);\r\n\r\nexport default NavigationBar;","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport NoMatch from \"./pages/NoMatch\";\nimport NavigationBar from \"./components/NavigationBar\";\n\nclass App extends Component {\n  componentDidMount() {\n    document.title = 'DNA Converter';\n  }\n\n  render() {\n    return (\n      <Router>\n        <React.Fragment>\n          <NavigationBar />\n            <Switch>\n              <Route exact path = \"/dna-converter\" component ={Home} />\n              <Route exact path = \"/dna-converter/about\" component ={About} />\n              <Route component ={NoMatch} />\n            </Switch>\n        </React.Fragment>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"typeface-source-code-pro\";\nimport \"typeface-montserrat\";\nimport \"typeface-open-sans\";\nimport \"typeface-roboto\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}